name: Pull Request

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # Make sure commit messages follow the conventional commits convention:
  # https://www.conventionalcommits.org
  commitlint:
    name: Lint Commit Messages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@b948419dd99f3fd78a6548d48f94e3df7f6bf3ed # v6.2.1

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          run_install: false
          version: 10
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: lts/*
      - id: pnpm-cache-path
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: pnpm cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ${{ steps.pnpm-cache-path.outputs.STORE_PATH }}
          key: lint-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            lint-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
      - uses: pre-commit-ci/lite-action@5d6cc0eb514c891a40562a58a8e71576c5c7fb43 # v1.1.0
        if: always()

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          run_install: false
          version: 10
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}
      - id: pnpm-cache-path
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: pnpm cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ${{ steps.pnpm-cache-path.outputs.STORE_PATH }}
          key: test-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            test-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      # https://github.com/vitest-dev/vitest-browser-react/blob/0f5098200a6d02ecd64c8a5549787c371a532bd2/.github/workflows/ci.yml#L71
      - name: Install Playwright Dependencies
        # run only if "playwright" is in the devDependencies
        run: |
          python -c "import subprocess as sp; from pathlib import Path; Path('node_modules/playwright').exists() and sp.run(['pnpm', 'exec', 'playwright', 'install'])"
      - name: Build
        run: pnpm build
      - name: Docs
        run: pnpm typedoc
      - name: Test
        run: pnpm test
      - name: Upload Code Coverage
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, lint]
    environment:
      name: release
      # Pages
      url: ${{ steps.deployment.outputs.url }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
      # Pages
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
          ref: ${{ github.sha }}
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          run_install: false
          version: 10
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: lts/*
      - id: pnpm-cache-path
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: pnpm cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ${{ steps.pnpm-cache-path.outputs.STORE_PATH }}
          key: release-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            release-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm build
      - name: Docs
        run: pnpm typedoc
      - name: Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          dry_run: ${{ github.ref_name != 'main' }}
      - name: Upload Documentation
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3
        with:
          path: docs
      - name: Deploy Documentation to GitHub Pages
        if: github.ref_name == 'main'
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
