# questions
project_name:
  type: str
  help: What is your project name?
  default: '{{ _copier_conf.dst_path.stem }}'

github_user:
  type: str
  help: What is your GitHub username?
  default: ''

setup_npm:
  type: bool
  help: Do you want to reserve the npm package name for setting up trusted publishing?
  default: true

setup_github:
  type: bool
  help: Do you want to create a GitHub repository for this project and set it up? (Requires GitHub CLI installed and authenticated)
  default: true

github_token:
  type: str
  secret: true
  help: GitHub Token with `repo` and `workflow` scopes (optional)
  when: '{{ setup_github }}'
  default: ''

create_minimal_package_installation_ids:
  type: str
  help: Comma separated GitHub App installation IDs to install to the created repository (leave blank to skip)
  default: ''

_exclude:
  - CHANGELOG.md
  - copier.yml
  - '~*'
  - '*.py[co]'
  - __pycache__
  - .git
  - .DS_Store
  - .svn
_skip_if_exists:
  - flake.lock
  - 'src/*'
  - pnpm-lock.yaml
  - pnpm-workspace.yaml
  - 'test/*'
_min_copier_version: 9.0.0
_tasks:
  # Replace true with false in .copier-answers.yml for options which should not be run on `copier update`
  -
    - '{{ _copier_python }}'
    - -c
    - >
      "from pathlib import Path; import re; p = Path('.copier-answers.yml'); p.write_text(re.sub(r'((?:setup_github|setup_npm): )true', r'\\g<1>false', p.read_text()))"
  # Replace github_user and project_name in files
  - 'sed -i.tmp "s/\([^@]\)34j/\1{{ github_user }}/g; s/create-minimal-package\|my-package-name/{{ project_name }}/g;" package.json src/index.ts README.md'
  - >
    sed -i.tmp 's/"version": "[0-9.]*"/"version": "0.0.0"/' package.json
  - 'rm *.tmp'
  - 'rm src/*.tmp'
  # Remove the copier instructions from README.md
  - ['{{ _copier_python }}', -c, 'from pathlib import Path; txt = Path("README.md").read_text(encoding="utf-8"); txt = txt.split("\n---\n---\n")[-1]; Path("README.md").write_text(txt, encoding="utf-8")']
  # Initialize npm package
  - '{% if setup_npm %}npx --yes setup-npm-trusted-publish {{ project_name }}{% endif %}'
  # Initialize Git repository
  - '{% if setup_github %}git init{% endif %}'
  - '{% if setup_github %}git add .{% endif %}'
  - '{% if setup_github %}git commit -m "chore: initial commit"{% endif %}'
  # Create GitHub repository and push
  - '{% if setup_github %}gh repo create {{ github_user }}/{{ project_name }} -d "" --public --remote=origin --source=. --push{% endif %}'
  - '{% if setup_github %}gh repo edit --delete-branch-on-merge --enable-projects=false --enable-wiki=false --enable-merge-commit=false --enable-squash-merge --enable-rebase-merge=false{% endif %}'
  # set branch protection
  # https://docs.github.com/ja/rest/branches/branch-protection?apiVersion=2022-11-28#update-branch-protection
  - '{% if setup_github %}gh api --method PUT -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/{{ github_user }}/{{ project_name }}/branches/$(git branch --show-current)/protection -F "required_status_checks=null" -F "enforce_admins=false" -F "required_pull_request_reviews=null" -F "restrictions=null" -F "required_linear_history=false" -F "allow_force_pushes=true" -F "allow_deletions=true" -F "block_creations=false" -F "required_conversation_resolution=false" -F "lock_branch=false" -F "allow_fork_syncing=true" || true{% endif %}'
  # install apps
  # https://docs.github.com/ja/rest/apps/installations?apiVersion=2022-11-28#add-a-repository-to-an-app-installation
  - '{% if create_minimal_package_installation_ids != "" %}GITHUB_TOKEN={{ github_token }} {% for id in create_minimal_package_installation_ids.split(",") %}gh api --method PUT -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "user/installations/{{ id }}/repositories/$(gh api "repos/{{ github_user }}/{{ project_name }}" --jq ".id")" && {% endfor %}echo "Apps installed"{% endif %}'
